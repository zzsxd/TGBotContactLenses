#####################################
#            Created by             #
#               zzsxd               #
#####################################
config_name = 'secrets.json'
reminders = {}  # —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#####################################
import os
import telebot
import platform
from datetime import datetime, timedelta
import threading
from threading import Lock
import time
from config_parser import ConfigParser
from frontend import Bot_inline_btns
from backend import TempUserData, DbAct
from db import DB


def start_msgas(user_id, buttons):
    bot.send_message(user_id, '¬´<b>ILLUSION Lens</b>¬ª - –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –ª–∏–Ω–∑—ã –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è!',
                     reply_markup=buttons.start_btns(), parse_mode="HTML")


def main():
    @bot.message_handler(commands=['start', 'admin'])
    def start_msg(message):
        name_user = message.from_user.first_name
        user_id = message.from_user.id
        buttons = Bot_inline_btns()
        command = message.text.replace('/', '')
        if command == 'start':
            if not db_actions.user_is_existed(user_id):
                db_actions.add_user(user_id, message.from_user.first_name, message.from_user.last_name,
                                    f'@{message.from_user.username}')
                temp_user_data.temp_data(user_id)[user_id][0] = 0
                bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {name_user}üëã\n\n'
                                                f'–Ø —á–∞—Ç-–±–æ—Ç –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ ¬´<b>Illusion Lens</b>¬ª üëÄ\n\n'
                                                '–í–∏–∂—É, —Ç—ã —Ç—É—Ç –≤–ø–µ—Ä–≤—ã–µ, —Ç–æ–≥–¥–∞ –Ω–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–ºüë§" –¥–ª—è '
                                                '–ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!', reply_markup=buttons.pre_start_btns(), parse_mode="HTML")
            else:
                start_msgas(user_id, buttons)
        elif db_actions.user_is_admin(user_id):
            if command == 'admin':
                bot.send_message(message.chat.id, f'{message.from_user.first_name}, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å ‚úÖ',
                                 reply_markup=buttons.admin_btns())

    @bot.message_handler(content_types=['contact'])
    def text_msg(message):
        user_id = message.chat.id
        buttons = Bot_inline_btns()
        code = temp_user_data.temp_data(user_id)[user_id][0]
        if db_actions.user_is_existed(user_id):
            match code:
                case 0:
                    temp_user_data.temp_data(user_id)[user_id][0] = None
                    db_actions.add_phone(user_id, message.contact.phone_number)
                    start_msgas(user_id, buttons)

    @bot.message_handler(content_types=['text'])
    def text_msg(message):
        user_id = message.chat.id
        buttons = Bot_inline_btns()
        code = temp_user_data.temp_data(user_id)[user_id][0]
        if db_actions.user_is_existed(user_id):
            if message.text == '–ê–∫—Ü–∏–∏ üíé':
                bot.send_message(message.chat.id, '–ù–∞—à–∏ –∞–∫—Ü–∏–∏ üíé', reply_markup=buttons.actions_btns())
            elif message.text == '–û –∫–æ–º–ø–∞–Ω–∏–∏ ‚ÑπÔ∏è':
                bot.send_message(message.chat.id, '¬´ILLUSION Lens¬ª - –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –ª–∏–Ω–∑—ã –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è!\n'
                                                  '\n'
                                                  '–° 2012 –≥–æ–¥–∞ –∫–æ–º–ø–∞–Ω–∏—è ¬´–í–∏–∂–µ–Ω –¢—Ä–µ–π–¥¬ª —è–≤–ª—è–µ—Ç—Å—è —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º '
                                                  '–¥–∏—Å—Ç—Ä–∏–±—å—é—Ç–µ—Ä–æ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –ª–∏–Ω–∑ –±—Ä–µ–Ω–¥–∞ ILLUSION.\n'
                                                  '\n'
                                                  '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –ª–∏–Ω–∑—ã –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è ILLUSION '
                                                  '–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ —Ä–∞–∑–ª–∏—á–Ω–æ–π —Ü–≤–µ—Ç–æ–≤–æ–π –≥–∞–º–º–µ —Å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –∏ '
                                                  '–≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω—ã –≤ –∫–∞–±–∏–Ω–µ—Ç–∞—Ö –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç - '
                                                  '–º–∞–≥–∞–∑–∏–Ω–∞—Ö, –∞–ø—Ç–µ–∫–∞—Ö, –æ–ø—Ç–∏–∫–∞—Ö –∏ –≤ —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç–∏—á–µ—Å–∫–∏—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö.\n'
                                                  '\n', reply_markup=buttons.about_btns())
            elif message.text == '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ª–∏–Ω–∑—ã üéÅ':
                bot.send_message(message.chat.id, '–ü–æ–ª—É—á–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø–∞—Ä—É –ª–∏–Ω–∑ ¬´ILLUSION Aero Light¬ª!\n\n'
                                                  '–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ —Å–∞–π—Ç–µ, –¥–æ–±–∞–≤—å —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞—Ä—É –ª–∏–Ω–∑ –≤ –∫–æ—Ä–∑–∏–Ω—É, '
                                                  '–¥–æ–∂–¥–∏—Å—å –¥–æ—Å—Ç–∞–≤–∫—É –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –∏–¥–µ–∞–ª—å–Ω—ã–º –∑—Ä–µ–Ω–∏–µ–º!\n\n'
                                                  '–î–≤—É—Ö–Ω–µ–¥–µ–ª—å–Ω—ã–µ –ª–∏–Ω–∑—ã ¬´ILLUSION Aero Light —Å–¥–µ–ª–∞–Ω—ã –∏–∑ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ '
                                                  '–º–∞—Ç–µ—Ä–∏–∞–ª–∞ ‚Äî —Ç–æ–Ω–∫–∏–µ –∏ —É–ø—Ä—É–≥–∏–µ, –æ–Ω–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ —á—É–≤—Å—Ç–≤—É—é—Ç—Å—è –Ω–∞ '
                                                  '–≥–ª–∞–∑–∞—Ö.\n\n'
                                                  '¬´ILLUSION Aero Light¬ª ‚Äì —ç—Ç–æ —Å–∏–ª–∏–∫–æ–Ω-–≥–∏–¥—Ä–æ–≥–µ–ª–µ–≤—ã–µ –ª–∏–Ω–∑—ã —Å –≤—ã—Å–æ–∫–æ–π '
                                                  '–∫–∏—Å–ª–æ—Ä–æ–¥–æ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–æ—Å—Ç—å—é –∏ –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º –≤–ª–∞–≥–æ—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º. '
                                                  '–ê—Å—Ñ–µ—Ä–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω –ª–∏–Ω–∑—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —á—ë—Ç–∫–æ–µ –∑—Ä–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ '
                                                  '–Ω–∏–∑–∫–æ–π –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏.\n\n'
                                                  '–¢–µ—Å—Ç–∏—Ä—É–π ¬´ILLUSION Aero Light¬ª –±–µ—Å–ø–ª–∞—Ç–Ω–æ!',
                                 reply_markup=buttons.registration_btns())
            elif message.text == '–ö–∞—Ç–∞–ª–æ–≥ üóÇ':
                bot.send_message(message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥ üóÇ', reply_markup=buttons.catalog_btns())
        else:
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞')

    def check_reminders():
        while True:
            current_time = datetime.now()
            for chat_id, reminder_list in reminders.items():
                new_list = []
                for text, remind_time in reminder_list:
                    if current_time >= remind_time:
                        bot.send_message(chat_id, f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ ‚è∞\n"
                                                  f"<b>–ö—É–ø–∏—Ç–µ –ª–∏–Ω–∑—ã!</b>", parse_mode="HTML")
                    else:
                        new_list.append((text, remind_time))
                reminders[chat_id] = new_list
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
            time.sleep(60)

    reminder_thread = threading.Thread(target=check_reminders)
    reminder_thread.start()

    @bot.callback_query_handler(func=lambda call: True)
    def callback(call):
        buttons = Bot_inline_btns()
        if call.data == 'transparent':
            bot.send_message(call.message.chat.id, '–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –ª–∏–Ω–∑—ã', reply_markup=buttons.transparent_btns())
        elif call.data == 'export':
            db_actions.db_export_xlsx()
            bot.send_document(call.message.chat.id, open(config.get_config()['xlsx_path'], 'rb'))
            os.remove(config.get_config()['xlsx_path'])
        elif call.data == 'blue':
            bot.send_message(call.message.chat.id, '–ì–æ–ª—É–±—ã–µ –ª–∏–Ω–∑—ã', reply_markup=buttons.blue_lenses_btns())
        elif call.data == 'green':
            bot.send_message(call.message.chat.id, '–ó–µ–ª–µ–Ω—ã–µ –ª–∏–Ω–∑—ã', reply_markup=buttons.green_lenses_btns())
        elif call.data == 'gray':
            bot.send_message(call.message.chat.id, '–°–µ—Ä—ã–µ –ª–∏–Ω–∑—ã', reply_markup=buttons.gray_lenses_btns())
        elif call.data == 'black':
            bot.send_message(call.message.chat.id, '–ß–µ—Ä–Ω—ã–µ –ª–∏–Ω–∑—ã', reply_markup=buttons.black_lenses_btns())
        elif call.data == 'brown':
            bot.send_message(call.message.chat.id, '–ö–∞—Ä–∏–µ –ª–∏–Ω–∑—ã', reply_markup=buttons.brown_lenses_btns())
        elif call.data == 'violet':
            bot.send_message(call.message.chat.id, '–§–∏–æ–ª–µ—Ç–æ–≤—ã–µ –ª–∏–Ω–∑—ã', reply_markup=buttons.violet_lenses_btns())
        elif call.data == 'carnaval':
            bot.send_message(call.message.chat.id, '–ö–∞—Ä–Ω–∞–≤–∞–ª—å–Ω—ã–µ –ª–∏–Ω–∑—ã', reply_markup=buttons.carnaval_lenses_btns())
        elif call.data == 'solutions':
            bot.send_message(call.message.chat.id, '–†–∞—Å—Ç–≤–æ—Ä—ã –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã', reply_markup=buttons.solutions_btns())
        elif call.data == 'sets':
            bot.send_message(call.message.chat.id, '–ù–∞–±–æ—Ä—ã –¥–ª—è –ª–∏–Ω–∑', reply_markup=buttons.sets_btns())
        elif call.data == 'water':
            bot.send_message(call.message.chat.id, '–†–∞—Å—Ç–≤–æ—Ä—ã', reply_markup=buttons.water_btns())
        elif call.data == 'drops':
            bot.send_message(call.message.chat.id, '–ö–∞–ø–ª–∏ –¥–ª—è –≥–ª–∞–∑', reply_markup=buttons.drops_btns())
        elif call.data == 'condata':
            bot.send_message(call.message.chat.id, '–ì—Ä—É–ø–ø–∞ –í–ö: vk.com/illusion_lens\n\n'
                                                   '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å: info@illusion-lens.ru\n\n'
                                                   '–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ —Å–∞–π—Ç –∏–ª–∏ –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤: 8 (812) 326 32 21 (Whatsapp, Telegram, Viber)\n\n'
                                                   '–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –∫–æ–ª–ª-—Ü–µ–Ω—Ç—Ä–∞: 9:30-18:00 –ü–Ω-–ü—Ç')
        elif call.data == 'freelenses':
            bot.send_message(call.message.chat.id, '–ü–æ–ª—É—á–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø–∞—Ä—É –ª–∏–Ω–∑ ILLUSION Aero Light.\n'
                                                   '\n'
                                                   '–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ —Å–∞–π—Ç–µ, –¥–æ–±–∞–≤—å —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞—Ä—É –ª–∏–Ω–∑ –≤ –∫–æ—Ä–∑–∏–Ω—É, '
                                                   '–¥–æ–∂–¥–∏—Å—å –¥–æ—Å—Ç–∞–≤–∫—É –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –∏–¥–µ–∞–ª—å–Ω—ã–º –∑—Ä–µ–Ω–∏–µ–º!\n'
                                                   '\n'
                                                   '–î–≤—É—Ö–Ω–µ–¥–µ–ª—å–Ω—ã–µ –ª–∏–Ω–∑—ã "ILLUSION Aero Light" —Å–¥–µ–ª–∞–Ω—ã –∏–∑ '
                                                   '–∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ ‚Äî —Ç–æ–Ω–∫–∏–µ –∏ —É–ø—Ä—É–≥–∏–µ, –æ–Ω–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ '
                                                   '—á—É–≤—Å—Ç–≤—É—é—Ç—Å—è –Ω–∞ –≥–ª–∞–∑–∞—Ö.\n'
                                                   '\n'
                                                   'ILLUSION Aero Light ‚Äì —ç—Ç–æ —Å–∏–ª–∏–∫–æ–Ω-–≥–∏–¥—Ä–æ–≥–µ–ª–µ–≤—ã–µ –ª–∏–Ω–∑—ã —Å –≤—ã—Å–æ–∫–æ–π '
                                                   '–∫–∏—Å–ª–æ—Ä–æ–¥–æ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–æ—Å—Ç—å—é –∏ –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º –≤–ª–∞–≥–æ—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º. '
                                                   '–ê—Å—Ñ–µ—Ä–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω –ª–∏–Ω–∑—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —á—ë—Ç–∫–æ–µ –∑—Ä–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ '
                                                   '–Ω–∏–∑–∫–æ–π –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏.\n'
                                                   '\n'
                                                   '–¢–µ—Å—Ç–∏—Ä—É–π "ILLUSION Aero Light" –±–µ—Å–ø–ª–∞—Ç–Ω–æ!',
                             reply_markup=buttons.registration_btns())

    bot.polling(none_stop=True)


if '__main__' == __name__:
    os_type = platform.system()
    work_dir = os.path.dirname(os.path.realpath(__file__))
    config = ConfigParser(f'{work_dir}/{config_name}', os_type)
    temp_user_data = TempUserData()
    db = DB(config.get_config()['db_file_name'], Lock())
    db_actions = DbAct(db, config, config.get_config()['xlsx_path'])
    bot = telebot.TeleBot(config.get_config()['tg_api'])
    main()
