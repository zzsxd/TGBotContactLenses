#####################################
#            Created by             #
#               zzsxd               #
#####################################
import copy

config_name = 'secrets.json'
reminders = {}
#####################################
import os
import telebot
import platform
from datetime import datetime
import threading
from threading import Lock
import time
from config_parser import ConfigParser
from frontend import Bot_inline_btns
from backend import TempUserData, DbAct
from db import DB


def main():
    @bot.message_handler(commands=['start', 'admin'])
    def start_msg(message):
        name_user = message.from_user.first_name
        user_id = message.from_user.id
        buttons = Bot_inline_btns()
        command = message.text.replace('/', '')
        db_actions.add_user(user_id, message.from_user.first_name, message.from_user.last_name,
                            f'@{message.from_user.username}')
        if command == 'start':
            bot.send_message(message.chat.id, '¬´<b>ILLUSION Lens</b>¬ª - –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –ª–∏–Ω–∑—ã –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è!',
                             reply_markup=buttons.start_btns(), parse_mode="HTML")
        elif db_actions.user_is_admin(user_id):
            if command == 'admin':
                bot.send_message(message.chat.id, f'{message.from_user.first_name}, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å ‚úÖ',
                                 reply_markup=buttons.admin_btns())

    @bot.message_handler(content_types=['text'])
    def text_msg(message):
        user_id = message.chat.id
        buttons = Bot_inline_btns()
        code = temp_user_data.temp_data(user_id)[user_id][0]
        if db_actions.user_is_existed(user_id):
            if message.text == '–ê–∫—Ü–∏–∏ üíé':
                bot.send_message(message.chat.id, '–ù–∞—à–∏ –∞–∫—Ü–∏–∏ üíé', reply_markup=buttons.actions_btns())
            elif message.text == '–û –∫–æ–º–ø–∞–Ω–∏–∏ ‚ÑπÔ∏è':
                bot.send_video(message.chat.id, open(video, 'rb'), width=1920, height=1080,
                               reply_markup=buttons.about_btns())
            elif message.text == '–ü–∞–º—è—Ç–∫–∞ üíå':
                bot.send_message(message.chat.id, '<b>–ö–∞–∫ –Ω–∞–¥–µ—Ç—å –∏ —Å–Ω—è—Ç—å –ª–∏–Ω–∑—É?</b>\n\n'
                                                  '–û–¥–∏–Ω –∏–∑ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –º–∏—Ñ–æ–≤ ‚Äî—á—Ç–æ –ª–∏–Ω–∑—ã —Ç—Ä—É–¥–Ω–æ –Ω–∞–¥–µ–≤–∞—Ç—å –∏ '
                                                  '—Å–Ω–∏–º–∞—Ç—å. –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ –±–æ–ª—å—à–µ –º–∏–Ω—É—Ç—ã –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—É '
                                                  '—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏–ª–∏ —Å–Ω—è—Ç–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –æ–ø—Ç–∏–∫–∏.\n\n'
                                                  '<b>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –æ–ø—Ç–∏–∫–∏ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø–æ —Ç–∞–∫–æ–º—É –ø—Ä–æ—Å—Ç–æ–º—É '
                                                  '–∞–ª–≥–æ—Ä–∏—Ç–º—É:</b>\n'
                                                  '1.–ü–æ–ª–æ–∂–∏—Ç–µ –ª–∏–Ω–∑—É –Ω–∞ –∫–æ–Ω—á–∏–∫ —É–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∞–ª—å—Ü–∞.\n'
                                                  '2.–°–≤–æ–±–æ–¥–Ω–æ–π —Ä—É–∫–æ–π –≤–æ–∑—å–º–∏—Ç–µ—Å—å –∑–∞ –≤–µ—Ä—Ö–Ω–µ–µ –≤–µ–∫–æ, —á—Ç–æ–±—ã –Ω–µ –º–æ—Ä–≥–∞—Ç—å, '
                                                  '–∏ –æ—Ç—Ç—è–Ω–∏—Ç–µ –≤–Ω–∏–∑ –Ω–∏–∂–Ω–µ–µ –≤–µ–∫–æ\n'
                                                  '3.–°–º–æ—Ç—Ä—è –≤–≤–µ—Ä—Ö, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ª–∏–Ω–∑—É –Ω–∞ –≥–ª–∞–∑–Ω–æ–µ —è–±–ª–æ–∫–æ\n'
                                                  '4. –ó–∞–∫—Ä–æ–π—Ç–µ –≥–ª–∞–∑, —á—Ç–æ–±—ã –ª–∏–Ω–∑–∞ –∑–∞–Ω—è–ª–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ.\n\n'
                                                  '<b>–°–Ω–∏–º–∞–µ—Ç—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –æ–ø—Ç–∏–∫–∞ —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:</b>\n'
                                                  '1.–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–≤–µ—Ä—Ö –∏ –æ—Ç—Ç—è–Ω–∏—Ç–µ –Ω–∏–∂–Ω–µ–µ –≤–µ–∫–æ\n'
                                                  '2.–£–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–º –ø–∞–ª—å—Ü–µ–º –≤—Ç–æ—Ä–æ–π —Ä—É–∫–∏ –∫–æ—Å–Ω–∏—Ç–µ—Å—å –Ω–∏–∂–Ω–µ–≥–æ –∫—Ä–∞—è –ª–∏–Ω–∑—ã –∏ '
                                                  '—Å–º–µ—Å—Ç–∏—Ç–µ –µ–µ –≤–Ω–∏–∑\n'
                                                  '3.–°–æ–∂–º–∏—Ç–µ –∏–∑–¥–µ–ª–∏–µ –±–æ–ª—å—à–∏–º –∏ —É–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–º –ø–∞–ª—å—Ü–∞–º–∏ –∏ –∏–∑–≤–ª–µ–∫–∏—Ç–µ –µ–≥–æ\n\n'
                                                '<b>–í–∞–∂–Ω–æ</b>: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —Å–Ω—è—Ç–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –æ–ø—Ç–∏–∫–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–∏—Å—Ç—ã–º–∏ '
                                                  '—Ä—É–∫–∞–º–∏. –í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–π—Ç–µ —Å –ø—Ä–∞–≤–æ–π –ª–∏–Ω–∑—ã, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–ø—É—Ç–∞—Ç—å –∏—Ö.',
                                 parse_mode='HTML')
            elif message.text == '–î–æ—Å—Ç–∞–≤–∫–∞ üöö':
                bot.send_message(message.chat.id, '–ú—ã –∏–º–µ–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏:\n\n'
                                                  '1. –î–æ—Å—Ç–∞–≤–∫–∞ –ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏.\n'
                                                  '2. –° –ø–æ–º–æ—â—å—é —Å–µ—Ä–≤–∏—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ 5POST\n'
                                                  '3. –ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—É 300 —Ä—É–±–ª–µ–π.\n\n'
                                                  '–î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å –ø–Ω-–ø—Ç, –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –ø–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.\n\n'
                                                  '–í–ù–ò–ú–ê–ù–ò–ï!\n'
                                                  '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 1000 —Ä—É–±.')
            elif message.text == '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ª–∏–Ω–∑—ã üéÅ':
                img = open('freelenses.png', 'rb')
                bot.send_photo(message.chat.id, img, '–ü–æ–ª—É—á–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø–∞—Ä—É –ª–∏–Ω–∑ ¬´ILLUSION Aero Light¬ª!\n\n'
                                                     '–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ —Å–∞–π—Ç–µ, –¥–æ–±–∞–≤—å —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞—Ä—É –ª–∏–Ω–∑ –≤ –∫–æ—Ä–∑–∏–Ω—É, '
                                                     '–¥–æ–∂–¥–∏—Å—å –¥–æ—Å—Ç–∞–≤–∫—É –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –∏–¥–µ–∞–ª—å–Ω—ã–º –∑—Ä–µ–Ω–∏–µ–º!\n\n'
                                                     '–î–≤—É—Ö–Ω–µ–¥–µ–ª—å–Ω—ã–µ –ª–∏–Ω–∑—ã ¬´ILLUSION Aero Light —Å–¥–µ–ª–∞–Ω—ã –∏–∑ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ '
                                                     '–º–∞—Ç–µ—Ä–∏–∞–ª–∞ ‚Äî —Ç–æ–Ω–∫–∏–µ –∏ —É–ø—Ä—É–≥–∏–µ, –æ–Ω–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ —á—É–≤—Å—Ç–≤—É—é—Ç—Å—è –Ω–∞ '
                                                     '–≥–ª–∞–∑–∞—Ö.\n\n'
                                                     '¬´ILLUSION Aero Light¬ª ‚Äì —ç—Ç–æ —Å–∏–ª–∏–∫–æ–Ω-–≥–∏–¥—Ä–æ–≥–µ–ª–µ–≤—ã–µ –ª–∏–Ω–∑—ã —Å –≤—ã—Å–æ–∫–æ–π '
                                                     '–∫–∏—Å–ª–æ—Ä–æ–¥–æ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–æ—Å—Ç—å—é –∏ –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º –≤–ª–∞–≥–æ—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º. '
                                                     '–ê—Å—Ñ–µ—Ä–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω –ª–∏–Ω–∑—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —á—ë—Ç–∫–æ–µ –∑—Ä–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ '
                                                     '–Ω–∏–∑–∫–æ–π –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏.\n\n'
                                                     '–¢–µ—Å—Ç–∏—Ä—É–π ¬´ILLUSION Aero Light¬ª –±–µ—Å–ø–ª–∞—Ç–Ω–æ!',
                               reply_markup=buttons.registration_btns())
            elif message.text == '–ö–∞—Ç–∞–ª–æ–≥ üóÇ':
                bot.send_message(message.chat.id, '–ù–∞—à –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–æ–≤ üóÇ', reply_markup=buttons.catalog_btns()).message_id
            elif message.text == '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ ‚è∞':
                bot.send_message(message.chat.id,
                                 '–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å–µ–±–µ <b>–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ</b>, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã—Ç—å –∫—É–ø–∏—Ç—å –Ω–æ–≤—ã–µ –ª–∏–Ω–∑—ã!\n\n'
                                 '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É, —Ç–æ–≥–¥–∞ –±–æ—Ç –ø—Ä–∏—à–ª–µ—Ç –≤–∞–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!\n\n<i>(–î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: DD.MM.YYYY HH:MM (<u>16.03.24 16:00</u>)</i>',
                                 parse_mode="HTML")
                temp_user_data.temp_data(user_id)[user_id][0] = 0
            elif code == 0:
                if message.text and ' ' in message.text:
                    try:
                        remind_time = datetime.strptime(message.text, '%d.%m.%Y %H:%M')
                        if user_id not in reminders:
                            reminders[user_id] = []
                        reminders[user_id].append((message.text, remind_time))
                        bot.reply_to(message,
                                     f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ <b>{remind_time.strftime('%d.%m.%Y %H:%M')}</b> —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ ‚úÖ",
                                     parse_mode="HTML")
                    except ValueError:
                        bot.reply_to(message, "üö´–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç üö´\n\n"
                                              "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '<b>DD.MM.YYYY HH:MM</b>'", parse_mode="HTML")
        else:
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞')

    def check_reminders():
        while True:
            current_time = datetime.now()
            for chat_id, reminder_list in reminders.items():
                new_list = []
                for text, remind_time in reminder_list:
                    if current_time >= remind_time:
                        bot.send_message(chat_id, f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ ‚è∞\n\n"
                                                  f"<b>–ö—É–ø–∏—Ç–µ –ª–∏–Ω–∑—ã!</b>", parse_mode="HTML")
                    else:
                        new_list.append((text, remind_time))
                reminders[chat_id] = new_list
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
            time.sleep(60)

    reminder_thread = threading.Thread(target=check_reminders)
    reminder_thread.start()

    @bot.callback_query_handler(func=lambda call: True)
    def callback(call):
        user_id = call.message.chat.id
        buttons = Bot_inline_btns()
        if call.data == 'export':
            db_actions.db_export_xlsx()
            bot.send_document(call.message.chat.id, open(config.get_config()['xlsx_path'], 'rb'))
            os.remove(config.get_config()['xlsx_path'])
        elif call.data == 'condata':
            bot.send_message(call.message.chat.id, '–ì—Ä—É–ø–ø–∞ –í–ö: vk.com/illusion_lens\n\n'
                                                   'YouTube: https://www.youtube.com/@illusionlens1530\n\n'
                                                   'Pinterest: https://ru.pinterest.com/illusionlens/\n\n'
                                                   '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å: info@illusion-lens.ru\n\n'
                                                   '–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ —Å–∞–π—Ç –∏–ª–∏ –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤: 8 (812) 326 32 21 (Whatsapp, Telegram, Viber)\n\n'
                                                   '–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –∫–æ–ª–ª-—Ü–µ–Ω—Ç—Ä–∞: 9:30-18:00 –ü–Ω-–ü—Ç')
        elif call.data == 'freelenses':
            img = open('freelenses.png', 'rb')
            bot.send_photo(call.message.chat.id, img, '–ü–æ–ª—É—á–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø–∞—Ä—É –ª–∏–Ω–∑ ¬´ILLUSION Aero Light¬ª!\n\n'
                                                 '–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ —Å–∞–π—Ç–µ, –¥–æ–±–∞–≤—å —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞—Ä—É –ª–∏–Ω–∑ –≤ –∫–æ—Ä–∑–∏–Ω—É, '
                                                 '–¥–æ–∂–¥–∏—Å—å –¥–æ—Å—Ç–∞–≤–∫—É –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –∏–¥–µ–∞–ª—å–Ω—ã–º –∑—Ä–µ–Ω–∏–µ–º!\n\n'
                                                 '–î–≤—É—Ö–Ω–µ–¥–µ–ª—å–Ω—ã–µ –ª–∏–Ω–∑—ã ¬´ILLUSION Aero Light —Å–¥–µ–ª–∞–Ω—ã –∏–∑ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ '
                                                 '–º–∞—Ç–µ—Ä–∏–∞–ª–∞ ‚Äî —Ç–æ–Ω–∫–∏–µ –∏ —É–ø—Ä—É–≥–∏–µ, –æ–Ω–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ —á—É–≤—Å—Ç–≤—É—é—Ç—Å—è –Ω–∞ '
                                                 '–≥–ª–∞–∑–∞—Ö.\n\n'
                                                 '¬´ILLUSION Aero Light¬ª ‚Äì —ç—Ç–æ —Å–∏–ª–∏–∫–æ–Ω-–≥–∏–¥—Ä–æ–≥–µ–ª–µ–≤—ã–µ –ª–∏–Ω–∑—ã —Å –≤—ã—Å–æ–∫–æ–π '
                                                 '–∫–∏—Å–ª–æ—Ä–æ–¥–æ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–æ—Å—Ç—å—é –∏ –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º –≤–ª–∞–≥–æ—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º. '
                                                 '–ê—Å—Ñ–µ—Ä–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω –ª–∏–Ω–∑—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —á—ë—Ç–∫–æ–µ –∑—Ä–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ '
                                                 '–Ω–∏–∑–∫–æ–π –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏.\n\n'
                                                 '–¢–µ—Å—Ç–∏—Ä—É–π ¬´ILLUSION Aero Light¬ª –±–µ—Å–ø–ª–∞—Ç–Ω–æ!',
                           reply_markup=buttons.registration_btns())
        elif call.data == 'promokod':
            bot.send_message(call.message.chat.id, '–ü–æ–ª—É—á–∏ –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑!\n'
                                                   '\n'
                                                   '–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ —Å–∞–π—Ç–µ, –¥–æ–±–∞–≤—å –ª—é–±–æ–π —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É, '
                                                   '–ø—Ä–∏–º–µ–Ω–∏ –ø—Ä–æ–º–æ–∫–æ–¥ "illusion2024" –∏ –ø–æ–ª—É—á–∏ —Å–∫–∏–¥–∫—É –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑!')
        elif call.data[:8] == 'lifetime':
            print(call.data[8:], temp_user_data.temp_data(user_id)[user_id][1])
            data_category = db_actions.get_categories_by_id(call.data[8:], temp_user_data.temp_data(user_id)[user_id][1])
            data_product = db_actions.get_products_by_lifetime(call.data[8:], temp_user_data.temp_data(user_id)[user_id][1])
            temp_user_data.temp_data(user_id)[user_id][2].append(bot.send_photo(chat_id=user_id, photo=open(data_category[0], 'rb'), caption=data_category[1], reply_markup=buttons.products_btns(data_product)).message_id)

        elif call.data[:5] == 'color':
            data_category = db_actions.get_categories_by_id(call.data[5:], temp_user_data.temp_data(user_id)[user_id][1])
            data_product = db_actions.get_products_by_color(call.data[5:], temp_user_data.temp_data(user_id)[user_id][1])
            temp_user_data.temp_data(user_id)[user_id][2].append(bot.send_photo(chat_id=user_id, photo=open(data_category[0], 'rb'), caption=data_category[1],
                           reply_markup=buttons.products_btns(data_product)).message_id)

        elif call.data[:6] == 'switch':
            temp_user_data.temp_data(user_id)[user_id][1] = call.data[6:]
            match call.data[6:]:
                case "1":
                    colors = db_actions.get_colors()
                    bot.send_message(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç', reply_markup=buttons.colors_btns(colors))
                case "2":
                    data_category = db_actions.carnaval_by_title(temp_user_data.temp_data(user_id)[user_id][1])
                    data_product = db_actions.get_products_by_type(temp_user_data.temp_data(user_id)[user_id][1])
                    temp_user_data.temp_data(user_id)[user_id][2].append(bot.send_photo(chat_id=user_id, photo=open(data_category[0], 'rb'), caption=data_category[1],
                                   reply_markup=buttons.products_btns(data_product)).message_id)
                case "3":
                    img = open('uncolor.jpg', 'rb')
                    bot.send_photo(user_id, photo=img, caption='–£ –Ω–∞—Å –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã—Ö –ª–∏–Ω–∑!\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫ '
                                                               '—Å–ª—É–∂–±—ã!', reply_markup=buttons.lifetime_btns())
        elif call.data[:12] == 'product_back':
            for i in temp_user_data.temp_data(user_id)[user_id][int(call.data[12:])+1]:
                bot.delete_message(user_id, i)
            temp_user_data.temp_data(user_id)[user_id][int(call.data[12:])+1] = copy.deepcopy([])
        elif call.data[:7] == 'product':
            product = db_actions.get_product_by_id(call.data[7:])
            temp_user_data.temp_data(user_id)[user_id][3].append(bot.send_photo(chat_id=user_id, photo=open(product[0], 'rb'), caption=product[1], reply_markup=buttons.buy_links_btns(product[2:])).message_id)

    bot.polling(none_stop=True)


if '__main__' == __name__:
    os_type = platform.system()
    work_dir = os.path.dirname(os.path.realpath(__file__))
    config = ConfigParser(f'{work_dir}/{config_name}', os_type)
    temp_user_data = TempUserData()
    db = DB(config.get_config()['db_file_name'], Lock())
    db_actions = DbAct(db, config, config.get_config()['xlsx_path'])
    video = config.get_config()['video']
    bot = telebot.TeleBot(config.get_config()['tg_api'])
    main()
